events {}

http {
    client_max_body_size 100M;
    
    upstream react {
        server react-prod:3000;
    }

    upstream golang {
        server golang-prod:5000;
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        location / {
            # force https
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;

        # replace this with your real certs!
        ssl_certificate /etc/nginx/conf.d/cert.pem;
        ssl_certificate_key /etc/nginx/conf.d/key.pem;

        location / {
            proxy_pass         http://react;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
        }

        location /api {
            proxy_pass         http://golang;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}
